import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function removeAsterisksFromWorkItems() {
  console.log('üîç Keres√©s: WorkItem-ek csillagokkal...');
  
  // Lek√©rj√ºk az √∂sszes workItem-et
  const allWorkItems = await prisma.workItem.findMany({
    select: {
      id: true,
      name: true,
    },
  });

  console.log(`üìä √ñsszesen ${allWorkItems.length} workItem tal√°lhat√≥`);

  let updatedCount = 0;

  for (const item of allWorkItems) {
    // Elt√°vol√≠tjuk a csillagokat a n√©v elej√©r≈ël √©s v√©g√©r≈ël
    const cleanedName = item.name
      .replace(/^\*+\s*/, '')  // Csillagok a n√©v elej√©n
      .replace(/\s*\*+$/, ''); // Csillagok a n√©v v√©g√©n

    // Ha v√°ltozott a n√©v, friss√≠tj√ºk
    if (cleanedName !== item.name) {
      await prisma.workItem.update({
        where: { id: item.id },
        data: { name: cleanedName },
      });
      
      console.log(`‚úÖ Friss√≠tve: "${item.name}" ‚Üí "${cleanedName}"`);
      updatedCount++;
    }
  }

  console.log(`\nüéâ K√©sz! ${updatedCount} workItem friss√≠tve.`);
  
  await prisma.$disconnect();
}

removeAsterisksFromWorkItems()
  .catch((error) => {
    console.error('‚ùå Hiba:', error);
    process.exit(1);
  });
