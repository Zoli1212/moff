/**
 * Script: Visszamen≈ëleges fizet√©s snapshot friss√≠t√©s
 * 
 * Ez a script friss√≠ti az √∂sszes napl√≥ bejegyz√©s dailyRateSnapshot √©rt√©k√©t
 * a megadott munk√°s √∫j fizet√©se alapj√°n.
 */

import { PrismaClient } from '@prisma/client'
import { getCurrentSalary } from '../utils/salary-helper'

const prisma = new PrismaClient()

async function updateSalarySnapshots(workerName: string) {
  try {
    console.log(`üîÑ Updating salary snapshots for worker: ${workerName}`)
    
    // 1. Keress√ºk meg a munk√°st
    const worker = await prisma.workforceRegistry.findFirst({
      where: { 
        name: { equals: workerName, mode: 'insensitive' }
      }
    })
    
    if (!worker) {
      console.log(`‚ùå Worker "${workerName}" not found`)
      return
    }
    
    // 2. Keress√ºk meg az √∂sszes napl√≥ bejegyz√©s√©t
    const diaryItems = await prisma.workDiaryItem.findMany({
      where: { 
        name: { equals: workerName, mode: 'insensitive' }
      },
      orderBy: { date: 'asc' }
    })
    
    console.log(`üìä Found ${diaryItems.length} diary items for ${workerName}`)
    
    // 3. Friss√≠ts√ºk minden bejegyz√©s snapshot-j√°t
    let updatedCount = 0
    
    for (const item of diaryItems) {
      const itemDate = item.date || new Date()
      const currentSalary = await getCurrentSalary(worker.id, itemDate)
      
      if (item.dailyRateSnapshot !== currentSalary) {
        await prisma.workDiaryItem.update({
          where: { id: item.id },
          data: { dailyRateSnapshot: currentSalary }
        })
        
        console.log(`‚úÖ Updated item ${item.id}: ${item.dailyRateSnapshot} ‚Üí ${currentSalary} Ft (date: ${itemDate.toISOString().split('T')[0]})`)
        updatedCount++
      }
    }
    
    console.log(`üéâ Updated ${updatedCount} diary items for ${workerName}`)
    
  } catch (error) {
    console.error('‚ùå Error:', error)
  } finally {
    await prisma.$disconnect()
  }
}

// Haszn√°lat:
// updateSalarySnapshots('foo37c')
// updateSalarySnapshots('foo37b')

export { updateSalarySnapshots }
