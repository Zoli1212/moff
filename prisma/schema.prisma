// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("NEXT_PUBLIC_NEON_DB_CONNECTION_STRING")
}

model Email {
  id                  Int       @id @default(autoincrement())
  gmailId             String    @unique
  from                String
  subject             String
  content             String
  hasAttachment       Boolean   @default(false)
  attachmentFilenames String[]
  tenantEmail         String
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}



model PriceItem {
  id       Int     @id @default(autoincrement())
  name     String
  price    Float
  unit     String
  quantity Float?   @default(1)
  tenantEmail String
}

model User {
  id    Int    @id @default(autoincrement())
  name  String
  email String @unique
}

model History {
  id          Int      @id @default(autoincrement())
  recordId    String
  content     Json?
  userEmail   String?
  createdAt   String?
  aiAgentType String?
  metaData    String?
  tenantEmail String
}

model Client {
  id            String   @id @default(uuid())
  companyName   String
  contactName   String
  contactPhone  String
  contactEmail  String
  demand        String
  offer         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  tenantEmail   String
}

model MyWork {
  id           Int      @id @default(autoincrement())
  customerName String
  date         DateTime
  location     String
  time         String
  totalPrice   Float
  description  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  tenantEmail  String
}

model MyInvoices {
  id              Int      @id @default(autoincrement())
  invoiceNumber   String
  issueDate       DateTime
  dueDate         DateTime
  sellerName      String
  sellerTaxNumber String
  buyerName       String
  buyerTaxNumber  String
  netAmount       Float?
  vatRate         Float?
  vatAmount       Float?
  grossAmount     Float?
  totalAmount     Float?
  currency        String?  @default("HUF")
  description     String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  tenantEmail     String
}
